# -*- coding: utf-8 -*-
"""
Created on Thu Jun 18 12:15:10 2020

@author: ANDREA.SHEN
"""

import pandas as pd

########################
##### HIST PERCENT #####
########################

def pif_hist_main(cls_run, PIF_CAP_HH, PIF_UNCAP_HH, NB_UNCAP_HH):
    '''
    Splices/sums the data required to build the histograms within the excel Reports file; outputs HIST_MKT_Dollar & HIST_MKT_PERCENT files.  
        Parameters: 
            cls_run (class): A class object, specified in A_Control,  holding variables for main folder path, state abbreviation, suffix of product and indicator 
            to also run Quotes
        Returns: 
            files (csv): Csv files called HIST_MKT_Dollar & HIST_MKT_PERCENT saved within the reports_inputs folder
    '''
#    rsltpif_dir = main_dir+'/results/PIF'
#    datapif_dir = cls_run.main_dir+'/data/PIF'
    ref_dir = cls_run.main_dir+'/python/aob_tool_reports/ref_tbl'
    out_dir = cls_run.main_dir+'/reports_inputs'
    
    HIST=pd.read_csv(ref_dir + "/HIST_RNG.csv")
    HIST_PERC = HIST[(HIST.TYPE=='HIST_PERCENT')]
        
    #################
    ##### Market#####
    #################
    
    ########################
    ##### HIST PERCENT #####
    ########################
    HIST=pd.read_csv(ref_dir + "/HIST_MKT_RNG.csv")
    HIST_PERC = HIST[(HIST.TYPE=='HIST_PERCENT')]
    
    # PIF_CAPPED
    # HIST PERCENT
    
    def hist(self):
        for i in range(len(HIST_PERC['LOW100'])):
            temp00.loc[(round(temp00[self]*100)>=HIST_PERC['LOW100'][i])&(round(temp00[self]*100)<=HIST_PERC['HIGH100'][i]), 'low_cutoff']=HIST_PERC['LOW100'][i]
            temp00.loc[(round(temp00[self]*100)>=HIST_PERC['LOW100'][i])&(round(temp00[self]*100)<=HIST_PERC['HIGH100'][i]), 'high_cutoff']=HIST_PERC['HIGH100'][i]
            temp00.loc[(round(temp00[self]*100)>=HIST_PERC['LOW100'][i])&(round(temp00[self]*100)<=HIST_PERC['HIGH100'][i]), 'cat']=HIST_PERC['CAT'][i]
        
        temp01=pd.DataFrame(temp00.groupby(['pro_mkt_tier_calc','cat','low_cutoff','high_cutoff']).agg(sum)['cvg_ind_TOTAL']).reset_index()
        return temp01   
    
    temp00=PIF_CAP_HH
    temp00['cvg_ind_TOTAL'] = temp00.apply(lambda x: 1 if x['lev_cap_prem_TOTAL']>0 and x['str_cap_prem_TOTAL']>0 and x['pro_cap_prem_TOTAL']>0 and x['pro_cap_prem_aged_TOTAL']>0 else 0, axis=1)
    acttemp01=hist('OB_ACT_TOTAL').reset_index()
    
    acttemp02 = acttemp01.groupby(['pro_mkt_tier_calc'])['cvg_ind_TOTAL'].apply(lambda x : x.sum()).reset_index()
    
    acttemp03 = pd.merge(acttemp01,acttemp02,left_on = ['pro_mkt_tier_calc'],right_on = ['pro_mkt_tier_calc'],how='left')
    acttemp03['pct_HH_bucket']=acttemp03['cvg_ind_TOTAL_x']/acttemp03['cvg_ind_TOTAL_y']
        
    acttemp03=acttemp03.rename(columns={'cvg_ind_TOTAL_x':'num_HH_bucket_act','pct_HH_bucket':'pct_HH_bucket_act','cvg_ind_TOTAL_y':'num_HH_total'})
    
    temp00=PIF_CAP_HH
    temp00['cvg_ind_TOTAL'] = temp00.apply(lambda x: 1 if x['lev_cap_prem_TOTAL']>0 and x['str_cap_prem_TOTAL']>0 and x['pro_cap_prem_TOTAL']>0 and x['pro_cap_prem_aged_TOTAL']>0 else 0, axis=1)
    strtemp01=hist('OB_STR_TOTAL').reset_index()
    strtemp02 = strtemp01.groupby(['pro_mkt_tier_calc'])['cvg_ind_TOTAL'].apply(lambda x : x.sum()).reset_index()
    
    strtemp03 = pd.merge(strtemp01,strtemp02,left_on = ['pro_mkt_tier_calc'],right_on = ['pro_mkt_tier_calc'],how='left')
    strtemp03['pct_HH_bucket']=strtemp03['cvg_ind_TOTAL_x']/strtemp03['cvg_ind_TOTAL_y']
        
    strtemp03=strtemp03.rename(columns={'cvg_ind_TOTAL_x':'num_HH_bucket_str','pct_HH_bucket':'pct_HH_bucket_str','cvg_ind_TOTAL_y':'num_HH_total'})
    
    ###
    
    histpercmrg\
            = pd.merge(HIST_PERC, acttemp03,
                 left_on = ['CAT','MKT_TIER_CALC_PRO'], right_on = ['cat','pro_mkt_tier_calc'], how = 'left')
    
    histpercmrg\
            = pd.merge(histpercmrg, strtemp03,
                 left_on = ['CAT','MKT_TIER_CALC_PRO'], right_on = ['cat','pro_mkt_tier_calc'], how = 'left')
        
    histpercmrg= pd.merge(histpercmrg,acttemp02,left_on = ['MKT_TIER_CALC_PRO'],right_on = ['pro_mkt_tier_calc'],how='left')    
    histpercmrg=histpercmrg.fillna(0).drop(['TYPE','LOW','HIGH','CAT','pro_mkt_tier_calc_x','cat_x','low_cutoff_x','high_cutoff_x','num_HH_total_x',\
                                  'pro_mkt_tier_calc_y','cat_y','low_cutoff_y','high_cutoff_y','num_HH_total_y','pro_mkt_tier_calc'], axis=1)
    histpercmrg['Book']='PIF_CAPPED'
    histpercmrg['Coverage']='TOTAL'
    
    histpercmrg=histpercmrg.rename(columns={'LOW100':'low_cutoff',\
                                            'HIGH100':'high_cutoff','cvg_ind_TOTAL':'num_HH_total'})
            
    histperc=histpercmrg[['Book','Coverage','MKT_TIER_CALC_PRO','low_cutoff','high_cutoff','pct_HH_bucket_act',\
                          'num_HH_bucket_act','pct_HH_bucket_str','num_HH_bucket_str','num_HH_total']]
            
    ###
    
    temp00=PIF_UNCAP_HH
    temp00['cvg_ind_TOTAL'] = temp00.apply(lambda x: 1 if x['lev_uncap_prem_TOTAL']>0 and x['str_uncap_prem_TOTAL']>0 and x['pro_uncap_prem_TOTAL']>0 and x['pro_uncap_prem_aged_TOTAL']>0 else 0, axis=1)
    acttemp01=hist('OB_ACT_TOTAL').reset_index()
    
    acttemp02 = acttemp01.groupby(['pro_mkt_tier_calc'])['cvg_ind_TOTAL'].apply(lambda x : x.sum()).reset_index()
    
    acttemp03 = pd.merge(acttemp01,acttemp02,left_on = ['pro_mkt_tier_calc'],right_on = ['pro_mkt_tier_calc'],how='left')
    acttemp03['pct_HH_bucket']=acttemp03['cvg_ind_TOTAL_x']/acttemp03['cvg_ind_TOTAL_y']
        
    acttemp03=acttemp03.rename(columns={'cvg_ind_TOTAL_x':'num_HH_bucket_act','pct_HH_bucket':'pct_HH_bucket_act','cvg_ind_TOTAL_y':'num_HH_total'})
    
    temp00=PIF_UNCAP_HH
    temp00['cvg_ind_TOTAL'] = temp00.apply(lambda x: 1 if x['lev_uncap_prem_TOTAL']>0 and x['str_uncap_prem_TOTAL']>0 and x['pro_uncap_prem_TOTAL']>0 and x['pro_uncap_prem_aged_TOTAL']>0 else 0, axis=1)
    strtemp01=hist('OB_STR_TOTAL').reset_index()
    strtemp02 = strtemp01.groupby(['pro_mkt_tier_calc'])['cvg_ind_TOTAL'].apply(lambda x : x.sum()).reset_index()
    
    strtemp03 = pd.merge(strtemp01,strtemp02,left_on = ['pro_mkt_tier_calc'],right_on = ['pro_mkt_tier_calc'],how='left')
    strtemp03['pct_HH_bucket']=strtemp03['cvg_ind_TOTAL_x']/strtemp03['cvg_ind_TOTAL_y']
        
    strtemp03=strtemp03.rename(columns={'cvg_ind_TOTAL_x':'num_HH_bucket_str','pct_HH_bucket':'pct_HH_bucket_str','cvg_ind_TOTAL_y':'num_HH_total'})
    
    ###
    
    histpercmrg\
            = pd.merge(HIST_PERC, acttemp03,
                 left_on = ['CAT','MKT_TIER_CALC_PRO'], right_on = ['cat','pro_mkt_tier_calc'], how = 'left')
    
    histpercmrg\
            = pd.merge(histpercmrg, strtemp03,
                 left_on = ['CAT','MKT_TIER_CALC_PRO'], right_on = ['cat','pro_mkt_tier_calc'], how = 'left')
        
    histpercmrg= pd.merge(histpercmrg,acttemp02,left_on = ['MKT_TIER_CALC_PRO'],right_on = ['pro_mkt_tier_calc'],how='left')    
    histpercmrg=histpercmrg.fillna(0).drop(['TYPE','LOW','HIGH','CAT','pro_mkt_tier_calc_x','cat_x','low_cutoff_x','high_cutoff_x','num_HH_total_x',\
                                  'pro_mkt_tier_calc_y','cat_y','low_cutoff_y','high_cutoff_y','num_HH_total_y','pro_mkt_tier_calc'], axis=1)
    histpercmrg['Book']='PIF_UNCAPPED'
    histpercmrg['Coverage']='TOTAL'
    
    histpercmrg=histpercmrg.rename(columns={'LOW100':'low_cutoff',\
    'HIGH100':'high_cutoff','cvg_ind_TOTAL':'num_HH_total'})
            
    histperc=histperc.append(histpercmrg[['Book','Coverage','MKT_TIER_CALC_PRO','low_cutoff','high_cutoff','pct_HH_bucket_act',\
                                          'num_HH_bucket_act','pct_HH_bucket_str','num_HH_bucket_str','num_HH_total']])
        
    ###
    ###
    
    temp00=NB_UNCAP_HH
    temp00['cvg_ind_TOTAL'] = temp00.apply(lambda x: 1 if x['lev_tech_price_TOTAL']>0 and x['str_tech_price_TOTAL']>0 and x['pro_tech_price_TOTAL']>0 else 0, axis=1) 
    acttemp01=hist('OB_ACT_TOTAL').reset_index()
    
    acttemp02 = acttemp01.groupby(['pro_mkt_tier_calc'])['cvg_ind_TOTAL'].apply(lambda x : x.sum()).reset_index()
    
    acttemp03 = pd.merge(acttemp01,acttemp02,left_on = ['pro_mkt_tier_calc'],right_on = ['pro_mkt_tier_calc'],how='left')
    acttemp03['pct_HH_bucket']=acttemp03['cvg_ind_TOTAL_x']/acttemp03['cvg_ind_TOTAL_y']
        
    acttemp03=acttemp03.rename(columns={'cvg_ind_TOTAL_x':'num_HH_bucket_act','pct_HH_bucket':'pct_HH_bucket_act','cvg_ind_TOTAL_y':'num_HH_total'})
    
    temp00=NB_UNCAP_HH
    temp00['cvg_ind_TOTAL'] = temp00.apply(lambda x: 1 if x['lev_tech_price_TOTAL']>0 and x['str_tech_price_TOTAL']>0 and x['pro_tech_price_TOTAL']>0 else 0, axis=1) 
    strtemp01=hist('OB_STR_TOTAL').reset_index()
    strtemp02 = strtemp01.groupby(['pro_mkt_tier_calc'])['cvg_ind_TOTAL'].apply(lambda x : x.sum()).reset_index()
    
    strtemp03 = pd.merge(strtemp01,strtemp02,left_on = ['pro_mkt_tier_calc'],right_on = ['pro_mkt_tier_calc'],how='left')
    strtemp03['pct_HH_bucket']=strtemp03['cvg_ind_TOTAL_x']/strtemp03['cvg_ind_TOTAL_y']
        
    strtemp03=strtemp03.rename(columns={'cvg_ind_TOTAL_x':'num_HH_bucket_str','pct_HH_bucket':'pct_HH_bucket_str','cvg_ind_TOTAL_y':'num_HH_total'})
    
    ###
    
    histpercmrg\
            = pd.merge(HIST_PERC, acttemp03,
                 left_on = ['CAT','MKT_TIER_CALC_PRO'], right_on = ['cat','pro_mkt_tier_calc'], how = 'left')
    
    histpercmrg\
            = pd.merge(histpercmrg, strtemp03,
                 left_on = ['CAT','MKT_TIER_CALC_PRO'], right_on = ['cat','pro_mkt_tier_calc'], how = 'left')
        
    histpercmrg= pd.merge(histpercmrg,acttemp02,left_on = ['MKT_TIER_CALC_PRO'],right_on = ['pro_mkt_tier_calc'],how='left')    
    histpercmrg=histpercmrg.fillna(0).drop(['TYPE','LOW','HIGH','CAT','pro_mkt_tier_calc_x','cat_x','low_cutoff_x','high_cutoff_x','num_HH_total_x',\
                                  'pro_mkt_tier_calc_y','cat_y','low_cutoff_y','high_cutoff_y','num_HH_total_y','pro_mkt_tier_calc'], axis=1)
    histpercmrg['Book']='NB_UNCAPPED'
    histpercmrg['Coverage']='TOTAL'
    
    histpercmrg=histpercmrg.rename(columns={'LOW100':'low_cutoff',\
                                            'HIGH100':'high_cutoff','cvg_ind_TOTAL':'num_HH_total'})
            
    histperc=histperc.append(histpercmrg[['Book','Coverage','MKT_TIER_CALC_PRO','low_cutoff','high_cutoff','pct_HH_bucket_act',\
                                          'num_HH_bucket_act','pct_HH_bucket_str','num_HH_bucket_str','num_HH_total']])
        
        
    histperc.to_csv(out_dir+'/HIST_MKT_PERCENT'+cls_run.suffix_product+'.csv',index=False)
    
    ########################
    ##### HIST DOLLAR #####
    ########################
    
    HIST_DOLL = HIST[(HIST.TYPE=='HIST_DOLLAR')].reset_index(drop=True)
    
    # PIF_CAPPED
    
    def hist(prem1,prem2):
        for i in range(len(HIST_DOLL['LOW'])):
            temp00.loc[(round(temp00[prem1]-temp00[prem2])>=HIST_DOLL['LOW'][i])&(round(temp00[prem1]-temp00[prem2])<=HIST_DOLL['HIGH'][i]), 'low_cutoff']=HIST_DOLL['LOW'][i]
            temp00.loc[(round(temp00[prem1]-temp00[prem2])>=HIST_DOLL['LOW'][i])&(round(temp00[prem1]-temp00[prem2])<=HIST_DOLL['HIGH'][i]), 'high_cutoff']=HIST_DOLL['HIGH'][i]
            temp00.loc[(round(temp00[prem1]-temp00[prem2])>=HIST_DOLL['LOW'][i])&(round(temp00[prem1]-temp00[prem2])<=HIST_DOLL['HIGH'][i]), 'cat']=HIST_DOLL['CAT'][i]
        
        temp01=pd.DataFrame(temp00.groupby(['pro_mkt_tier_calc','cat','low_cutoff','high_cutoff']).agg(sum)['cvg_ind_TOTAL']).reset_index()
        return temp01   
    
    temp00=PIF_CAP_HH
    temp00['cvg_ind_TOTAL'] = temp00.apply(lambda x: 1 if x['pro_cap_prem_TOTAL']>0 and x['lev_cap_prem_TOTAL']>0 else 0, axis=1)
    acttemp01=hist('pro_cap_prem_TOTAL','lev_cap_prem_TOTAL').reset_index()
    
    acttemp02 = acttemp01.groupby(['pro_mkt_tier_calc'])['cvg_ind_TOTAL'].apply(lambda x : x.sum()).reset_index()
    
    acttemp03 = pd.merge(acttemp01,acttemp02,left_on = ['pro_mkt_tier_calc'],right_on = ['pro_mkt_tier_calc'],how='left')
    acttemp03['pct_HH_bucket']=acttemp03['cvg_ind_TOTAL_x']/acttemp03['cvg_ind_TOTAL_y']
        
    acttemp03=acttemp03.rename(columns={'cvg_ind_TOTAL_x':'num_HH_bucket_act','pct_HH_bucket':'pct_HH_bucket_act','cvg_ind_TOTAL_y':'num_HH_total'})
    
    temp00=PIF_CAP_HH
    temp00['cvg_ind_TOTAL'] = temp00.apply(lambda x: 1 if x['pro_cap_prem_aged_TOTAL']>0 and x['str_cap_prem_TOTAL']>0 else 0, axis=1)
    strtemp01=hist('pro_cap_prem_aged_TOTAL','str_cap_prem_TOTAL').reset_index()
    strtemp02 = strtemp01.groupby(['pro_mkt_tier_calc'])['cvg_ind_TOTAL'].apply(lambda x : x.sum()).reset_index()
    
    strtemp03 = pd.merge(strtemp01,strtemp02,left_on = ['pro_mkt_tier_calc'],right_on = ['pro_mkt_tier_calc'],how='left')
    strtemp03['pct_HH_bucket']=strtemp03['cvg_ind_TOTAL_x']/strtemp03['cvg_ind_TOTAL_y']
        
    strtemp03=strtemp03.rename(columns={'cvg_ind_TOTAL_x':'num_HH_bucket_str','pct_HH_bucket':'pct_HH_bucket_str','cvg_ind_TOTAL_y':'num_HH_total'})
    
    
    histdollmrg\
            = pd.merge(HIST_DOLL,
                 acttemp03,
                 left_on = ['CAT','MKT_TIER_CALC_PRO'],
                 right_on = ['cat','pro_mkt_tier_calc'],
                 how = 'left')
    
    histdollmrg\
            = pd.merge(histdollmrg,
                 strtemp03,
                 left_on = ['CAT','MKT_TIER_CALC_PRO'],
                 right_on = ['cat','pro_mkt_tier_calc'],
                 how = 'left')
        
    histdollmrg= pd.merge(histdollmrg,acttemp02,left_on = ['MKT_TIER_CALC_PRO'],right_on = ['pro_mkt_tier_calc'],how='left')    
    histdollmrg=histdollmrg.fillna(0).drop(['TYPE','LOW100','HIGH100','CAT','pro_mkt_tier_calc_x','cat_x','low_cutoff_x','high_cutoff_x','num_HH_total_x',\
    'pro_mkt_tier_calc_y','cat_y','low_cutoff_y','high_cutoff_y','num_HH_total_y','pro_mkt_tier_calc'], axis=1)
    histdollmrg['Book']='PIF_CAPPED'
    histdollmrg['Coverage']='TOTAL'
    
    histdollmrg=histdollmrg.rename(columns={'LOW':'low_cutoff',\
    'HIGH':'high_cutoff','cvg_ind_TOTAL':'num_HH_total'})
            
    histdoll=histdollmrg[['Book','Coverage','MKT_TIER_CALC_PRO','low_cutoff','high_cutoff','pct_HH_bucket_act',\
    'num_HH_bucket_act','pct_HH_bucket_str','num_HH_bucket_str','num_HH_total']]
        
    ###
    # PIF_UNCAPPED
    
    temp00=PIF_UNCAP_HH
    temp00['cvg_ind_TOTAL'] = temp00.apply(lambda x: 1 if x['pro_uncap_prem_TOTAL']>0 and x['lev_uncap_prem_TOTAL']>0 else 0, axis=1)
    acttemp01=hist('pro_uncap_prem_TOTAL','lev_uncap_prem_TOTAL').reset_index()
    
    acttemp02 = acttemp01.groupby(['pro_mkt_tier_calc'])['cvg_ind_TOTAL'].apply(lambda x : x.sum()).reset_index()
    
    acttemp03 = pd.merge(acttemp01,acttemp02,left_on = ['pro_mkt_tier_calc'],right_on = ['pro_mkt_tier_calc'],how='left')
    acttemp03['pct_HH_bucket']=acttemp03['cvg_ind_TOTAL_x']/acttemp03['cvg_ind_TOTAL_y']
        
    acttemp03=acttemp03.rename(columns={'cvg_ind_TOTAL_x':'num_HH_bucket_act','pct_HH_bucket':'pct_HH_bucket_act','cvg_ind_TOTAL_y':'num_HH_total'})
    
    temp00=PIF_UNCAP_HH
    temp00['cvg_ind_TOTAL'] = temp00.apply(lambda x: 1 if x['pro_uncap_prem_aged_TOTAL']>0 and x['str_uncap_prem_TOTAL']>0 else 0, axis=1)
    strtemp01=hist('pro_uncap_prem_aged_TOTAL','str_uncap_prem_TOTAL').reset_index()
    strtemp02 = strtemp01.groupby(['pro_mkt_tier_calc'])['cvg_ind_TOTAL'].apply(lambda x : x.sum()).reset_index()
    
    strtemp03 = pd.merge(strtemp01,strtemp02,left_on = ['pro_mkt_tier_calc'],right_on = ['pro_mkt_tier_calc'],how='left')
    strtemp03['pct_HH_bucket']=strtemp03['cvg_ind_TOTAL_x']/strtemp03['cvg_ind_TOTAL_y']
        
    strtemp03=strtemp03.rename(columns={'cvg_ind_TOTAL_x':'num_HH_bucket_str','pct_HH_bucket':'pct_HH_bucket_str','cvg_ind_TOTAL_y':'num_HH_total'})
    
    
    histdollmrg\
            = pd.merge(HIST_DOLL,
                 acttemp03,
                 left_on = ['CAT','MKT_TIER_CALC_PRO'],
                 right_on = ['cat','pro_mkt_tier_calc'],
                 how = 'left')
    
    histdollmrg\
            = pd.merge(histdollmrg,
                 strtemp03,
                 left_on = ['CAT','MKT_TIER_CALC_PRO'],
                 right_on = ['cat','pro_mkt_tier_calc'],
                 how = 'left')
        
    histdollmrg= pd.merge(histdollmrg,acttemp02,left_on = ['MKT_TIER_CALC_PRO'],right_on = ['pro_mkt_tier_calc'],how='left')    
    histdollmrg=histdollmrg.fillna(0).drop(['TYPE','LOW100','HIGH100','CAT','pro_mkt_tier_calc_x','cat_x','low_cutoff_x','high_cutoff_x','num_HH_total_x',\
    'pro_mkt_tier_calc_y','cat_y','low_cutoff_y','high_cutoff_y','num_HH_total_y','pro_mkt_tier_calc'], axis=1)
    histdollmrg['Book']='PIF_UNCAPPED'
    histdollmrg['Coverage']='TOTAL'
    
    histdollmrg=histdollmrg.rename(columns={'LOW':'low_cutoff',\
    'HIGH':'high_cutoff','cvg_ind_TOTAL':'num_HH_total'})
            
    histdoll=histdoll.append(histdollmrg[['Book','Coverage','MKT_TIER_CALC_PRO','low_cutoff','high_cutoff','pct_HH_bucket_act',\
    'num_HH_bucket_act','pct_HH_bucket_str','num_HH_bucket_str','num_HH_total']])
    
    ###
    # NB_UNCAPPED
    
    temp00=NB_UNCAP_HH
    temp00['cvg_ind_TOTAL'] = temp00.apply(lambda x: 1 if x['pro_tech_price_TOTAL']>0 and x['lev_tech_price_TOTAL']>0 else 0, axis=1)
    acttemp01=hist('pro_tech_price_TOTAL','lev_tech_price_TOTAL').reset_index()
    
    acttemp02 = acttemp01.groupby(['pro_mkt_tier_calc'])['cvg_ind_TOTAL'].apply(lambda x : x.sum()).reset_index()
    
    acttemp03 = pd.merge(acttemp01,acttemp02,left_on = ['pro_mkt_tier_calc'],right_on = ['pro_mkt_tier_calc'],how='left')
    acttemp03['pct_HH_bucket']=acttemp03['cvg_ind_TOTAL_x']/acttemp03['cvg_ind_TOTAL_y']
        
    acttemp03=acttemp03.rename(columns={'cvg_ind_TOTAL_x':'num_HH_bucket_act','pct_HH_bucket':'pct_HH_bucket_act','cvg_ind_TOTAL_y':'num_HH_total'})
    
    temp00=NB_UNCAP_HH
    temp00['cvg_ind_TOTAL'] = temp00.apply(lambda x: 1 if x['pro_tech_price_TOTAL']>0 and x['str_tech_price_TOTAL']>0 else 0, axis=1)
    strtemp01=hist('pro_tech_price_TOTAL','str_tech_price_TOTAL').reset_index()
    strtemp02 = strtemp01.groupby(['pro_mkt_tier_calc'])['cvg_ind_TOTAL'].apply(lambda x : x.sum()).reset_index()
    
    strtemp03 = pd.merge(strtemp01,strtemp02,left_on = ['pro_mkt_tier_calc'],right_on = ['pro_mkt_tier_calc'],how='left')
    strtemp03['pct_HH_bucket']=strtemp03['cvg_ind_TOTAL_x']/strtemp03['cvg_ind_TOTAL_y']
        
    strtemp03=strtemp03.rename(columns={'cvg_ind_TOTAL_x':'num_HH_bucket_str','pct_HH_bucket':'pct_HH_bucket_str','cvg_ind_TOTAL_y':'num_HH_total'})
    
    
    histdollmrg\
            = pd.merge(HIST_DOLL,
                 acttemp03,
                 left_on = ['CAT','MKT_TIER_CALC_PRO'],
                 right_on = ['cat','pro_mkt_tier_calc'],
                 how = 'left')
    
    histdollmrg\
            = pd.merge(histdollmrg,
                 strtemp03,
                 left_on = ['CAT','MKT_TIER_CALC_PRO'],
                 right_on = ['cat','pro_mkt_tier_calc'],
                 how = 'left')
        
    histdollmrg= pd.merge(histdollmrg,acttemp02,left_on = ['MKT_TIER_CALC_PRO'],right_on = ['pro_mkt_tier_calc'],how='left')    
    histdollmrg=histdollmrg.fillna(0).drop(['TYPE','LOW100','HIGH100','CAT','pro_mkt_tier_calc_x','cat_x','low_cutoff_x','high_cutoff_x','num_HH_total_x',\
    'pro_mkt_tier_calc_y','cat_y','low_cutoff_y','high_cutoff_y','num_HH_total_y','pro_mkt_tier_calc'], axis=1)
    histdollmrg['Book']='NB_UNCAPPED'
    histdollmrg['Coverage']='TOTAL'
    
    histdollmrg=histdollmrg.rename(columns={'LOW':'low_cutoff',\
    'HIGH':'high_cutoff','cvg_ind_TOTAL':'num_HH_total'})
            
    histdoll=histdoll.append(histdollmrg[['Book','Coverage','MKT_TIER_CALC_PRO','low_cutoff','high_cutoff','pct_HH_bucket_act',\
    'num_HH_bucket_act','pct_HH_bucket_str','num_HH_bucket_str','num_HH_total']])
        
    histdoll.to_csv(out_dir+'/HIST_MKT_DOLLAR'+cls_run.suffix_product+'.csv',index=False)
